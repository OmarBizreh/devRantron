# this configuration is needed to allow artifacts to get pushed to github
sudo: required
dist: trusty

# makes it easier to compile any native stuff
language: c

# we will use linux and osx for the builds, though that osx takes a really long time to boot, ~15 minutes
matrix:
  include:
    - os: osx
      env: NODE_VERSION=7
    - os: linux
      env: CC=clang CXX=clang++ npm_config_clang=1 NODE_VERSION=7
      compiler: clang

# for now, just test on node 7
node_js:
  - 7

# cache yarn cache, npm cache and node_modules to make life easier. We do not want to download them each time
cache:
  directories:
    - node_modules
    - $HOME/.npm
  yarn: true

# build essentials for the linux build
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8
      - icnsutils
      - graphicsmagick
      - libgnome-keyring-dev
      - xz-utils
      - xorriso
      - xvfb

before_install:
  # we might need to add yarn to the repo list if we are currently running linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -;
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list;
    sudo apt-get update -qq;
    sudo apt-get install yarn -y -qq;
    fi
  # if we are currently rocking on osx, make sure to update and install yarn over brew package manager
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
    brew update;
    brew install yarn;
    fi

# on linux, install yarn over apt, on osx, over brew
install:
  # install the proper node version specified by $NODE_VERSION
  - nvm install $NODE_VERSION
  - nvm use --delete-prefix $NODE_VERSION
  - yarn install

# the order of execution is important. We want to eliminate all linting errors before testing. 
# Any only deploy if testing worked. Coverage will only be reported if testing succeeded.
# MAKE SURE TO ONLY PACKAGE IF WE ARE ON MASTER. For testing, package:dir will be used.
script:
  - npm rebuild node-sass
  - yarn ci:all

# only deploy to github if the CI script exited with 0. Make sure to do this only if we are on master.
after_success:
  - if [[ "$TRAVIS_BRANCH" == "master" ]]; then yarn ci:deploy; fi
